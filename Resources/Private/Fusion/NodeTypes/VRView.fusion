prototype(Gerdemann.VRView:VRView) < prototype(Neos.Neos:Content) {
    asset = ${q(node).property('asset')}
    width = ${q(node).property('width')}
    height = ${q(node).property('height')}
    isStereo = ${q(node).property('isStereo')}
    defaultYaw = ${q(node).property('defaultYaw')}

    @context.asset = ${this.asset}
    @context.width = ${!String.isBlank(this.width) ? this.width : '100%'}
    @context.height = ${!String.isBlank(this.height) ? this.height : '300px'}
    @context.isStereo = ${this.isStereo}
    @context.defaultYaw = ${this.defaultYaw}

    attributes {
        class = 'gerdemann-vrview'
        id = ${'vrview-' + node.identifier}
        data-type = ${Array.first(String.split(asset.mediaType, '/'))}
        data-width = ${width}
        data-height = ${height}

        @if.whenImageOrVideo = ${this.data-type == 'image' || this.data-type == 'video'}
    }

    scenesArray = Neos.Fusion:RawArray {
        start = Neos.Fusion:RawArray {
            options = Neos.Fusion:RawArray {
                image = Neos.Fusion:ResourceUri {
                     resource = ${asset.resource}
                     @if.whenImage = ${Array.first(String.split(asset.mediaType, '/')) == 'image'}
                }
                video = Neos.Fusion:ResourceUri {
                     resource = ${asset.resource}
                     @if.whenVideo = ${Array.first(String.split(asset.mediaType, '/')) == 'video'}
                }
                is_stereo = ${isStereo ? 'true' : 'false'}
                default_yaw = ${defaultYaw}
                width = ${width}
                height = ${height}
            }
        }
    }

    scenes = ${Json.stringify(this.scenesArray)}

    placeholder = Neos.Fusion:Tag {
        tagName = 'img'
        attributes {
            src = Neos.Fusion:ResourceUri {
                    path = 'Images/dummy-image.svg'
                    package = 'Neos.Neos'
            }
            style = ${'width: ' + width + '; height: ' + height + ';'}
        }
        alt = 'VR View Placeholder'
        mediaType = ${Array.first(String.split(asset.mediaType, '/'))}

        @if.whenNoImageOrVideo = ${this.mediaType != 'image' && this.mediaType != 'video'}
        @if.onlyRenderWhenInBackend = ${documentNode.context.inBackend}
    }
}