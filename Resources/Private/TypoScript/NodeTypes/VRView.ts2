prototype(Gerdemann.VRView:VRView) < prototype(TYPO3.Neos:Content) {
    asset = ${q(node).property('asset')}
    width = ${q(node).property('width')}
    height = ${q(node).property('height')}
    isStereo = ${q(node).property('isStereo')}
    defaultYaw = ${q(node).property('defaultYaw')}

    @context.asset = ${this.asset}
    @context.width = ${!String.isBlank(this.width) ? this.width : '100%'}
    @context.height = ${!String.isBlank(this.height) ? this.height : '300px'}
    @context.isStereo = ${this.isStereo}
    @context.defaultYaw = ${this.defaultYaw}

    attributes {
        class = 'gerdemann-vrview'
        id = ${'vrview-' + node.identifier}
        data-image = TYPO3.TypoScript:ResourceUri {
             resource = ${asset.resource}
             @if.whenImage = ${Array.first(String.split(asset.mediaType, '/')) == 'image'}
        }
        data-type = ${Array.first(String.split(asset.mediaType, '/'))}
        data-video = TYPO3.TypoScript:ResourceUri {
             resource = ${asset.resource}
             @if.whenVideo = ${Array.first(String.split(asset.mediaType, '/')) == 'video'}
        }
        data-isstereo = ${isStereo ? 'true' : 'false'}
        data-defaultyaw = ${defaultYaw}
        data-width = ${width}
        data-height = ${height}
    }

    placeholder = TYPO3.TypoScript:Tag {
        tagName = 'img'
        attributes {
            src = TYPO3.TypoScript:Case {
                imageAvailable {
                    condition = ${Array.first(String.split(asset.mediaType, '/')) == 'image'}
                    renderer = TYPO3.TypoScript:ResourceUri {
                        resource = ${asset.resource}
                   }
                }

                fallBackimage {
                    condition = ${image.resource}
                    renderer = TYPO3.TypoScript:ResourceUri {
                        path = 'Images/dummy-image.svg'
                        package = 'TYPO3.Neos'
                   }
                }
            }
            style = ${'width: ' + width + '; height: ' + height + ';'}
        }
        alt = 'VR View Placeholder'
        @if.onlyRenderWhenInBackend = ${documentNode.context.inBackend}
    }
}